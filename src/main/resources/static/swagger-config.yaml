openapi: 3.0.3
info:
  title: Tools Rest Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: api-gateway-controller
    description: API Gateway Controller
  - name: user-controller
    description: User Controller
paths:
  /api/v1/emvtagsearch:
    get:
      tags:
        - api-gateway-controller
      summary: getEMVTag
      operationId: getEMVTagUsingGET
      parameters:
        - name: id
          in: query
          description: EMV Tag ID
          required: true
          style: form
          allowReserved: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/emvtagsearchdescription:
    get:
      tags:
        - api-gateway-controller
      summary: getEMVByDescription
      operationId: getEMVByDescriptionUsingGET
      parameters:
        - name: description
          in: query
          description: Keyword search of EMV Tag descriptions
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/tlvdecoder/{tlv}:
    get:
      tags:
        - api-gateway-controller
      summary: getTLVData
      operationId: getTLVDataUsingGET
      parameters:
        - name: tlv
          in: path
          description: Decodes valid TLV
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/users:
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/users/login:
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      parameters:
        - name: username
          in: query
          description: username
          required: true
          style: form
          schema:
            type: string
        - name: password
          in: query
          description: password
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/users/register:
    post:
      tags:
        - user-controller
      summary: createUser
      operationId: createUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRestModelRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRestModelResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/users/update:
    put:
      tags:
        - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    JwtResponse:
      title: JwtResponse
      type: object
      properties:
        dateOfExpiry:
          type: string
          format: date-time
        jwtToken:
          type: string
    TagResponse:
      title: TagResponse
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        update_date:
          type: string
          format: date-time
    UserRestModelRequest:
      title: UserRestModelRequest
      type: object
      properties:
        companyName:
          type: string
        email:
          type: string
        password:
          type: string
        userName:
          maxLength: 32
          minLength: 2
          type: string
    UserRestModelResponse:
      title: UserRestModelResponse
      type: object
      properties:
        companyName:
          type: string
        email:
          type: string
        userName:
          type: string
security:
  - bearerAuth: []

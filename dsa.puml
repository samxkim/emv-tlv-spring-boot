@startuml

class RestExceptionHandler
class WebappController
class APIErrorResponse
interface EMVTag
class EMVTagImpl
interface TLVDecoder
class TLVDecoderImpl
class EMVTagModel
class ApiGateway

EMVTag <|-- EMVTagImpl
TLVDecoder <|-- TLVDecoderImpl
WebappController <|-- ApiGateway
ApiGateway <|-- APIErrorResponse
WebappController <|-- RestExceptionHandler

class ApiGateway {
    getDecodedTLVData():TLVDecoder
    getEMVTagData():EMVTag
}

interface TLVDecoder {
    decodeTLVData(String):LinkedList<String>
}

class TLVDecoderImpl {
    decodeTLVData(String):LinkedList<String>
}

class APIErrorResponse{
    status: HttpStatus
    errorCode: String
    message: String
    detail: String
}

class EMVTagImpl {
    getEMVTag(String):String
    getKeyword(String):String
}

class WebappController {
    EMVTagSearch(String):EMVTag
    TLVDecoder(String):TLVDecoder
}

class RestExceptionHandler {
    logger: LoggerFactory.getLogger(javaClass)
    resolveException(exception, request):APIErrorResponse
    logError(message, exception, request):void
}

class EMVTagModel {
    id: Integer
    name: String
    description: String
}

interface EMVTag {
    getEMVTag(String):String
    getKeyword(String):String
}

@enduml